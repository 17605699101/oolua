# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug/Debug/test.unit
  TARGETDIR  = bin/Debug
  TARGET     = $(TARGETDIR)/test.unit
  DEFINES   += -DDEBUG -D_DEBUG -DPLATFORM_CHECKED -DUNIX_BUILD -DUSING_CPPUNIT -DUSING_GMOCK -DOOLUA_STORE_ERROR
  INCLUDES  += -Iinclude/cppunit -Iinclude/gmock -Iinclude/lua -Iinclude -Iinclude -I../../../../../../../usr/local/include -I../../../../../../../usr/include -Iunit_tests/bind_classes -Iunit_tests/cpp_classes -Iunit_tests/test_classes
  CPPFLAGS  += -MMD $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -Wall -W -Wall -ansi -pedantic -std=c++98
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += `gmock-config --cxxflags --ldflags --libs` -L-Lusr/local/lib -L-Lusr/lib -Lbin/Debug
  LIBS      += -loolua_d -llua -lcppunit
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += bin/Debug/liboolua_d.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release/Release/test.unit
  TARGETDIR  = bin/Release
  TARGET     = $(TARGETDIR)/test.unit
  DEFINES   += -DNDEBUG -DRELEASE -DPLATFORM_CHECKED -DUNIX_BUILD -DUSING_CPPUNIT -DUSING_GMOCK -DOOLUA_STORE_ERROR
  INCLUDES  += -Iinclude/cppunit -Iinclude/gmock -Iinclude/lua -Iinclude -Iinclude -I../../../../../../../usr/local/include -I../../../../../../../usr/include -Iunit_tests/bind_classes -Iunit_tests/cpp_classes -Iunit_tests/test_classes
  CPPFLAGS  += -MMD $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -Wall -W -Wall -ansi -pedantic -std=c++98
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -Wl,-x `gmock-config --cxxflags --ldflags --libs` -L-Lusr/local/lib -L-Lusr/lib -Lbin/Release
  LIBS      += -loolua -llua -lcppunit
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += bin/Release/liboolua.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/main.o \
	$(OBJDIR)/expose_hierachy.o \
	$(OBJDIR)/expose_pulls_stub_param.o \
	$(OBJDIR)/lua_class_ops.o \
	$(OBJDIR)/lua_const_funcs.o \
	$(OBJDIR)/lua_ownership.o \
	$(OBJDIR)/lua_push.o \
	$(OBJDIR)/class_exchange.o \
	$(OBJDIR)/class_method_returns_class.o \
	$(OBJDIR)/const_functions.o \
	$(OBJDIR)/construct.o \
	$(OBJDIR)/destruct.o \
	$(OBJDIR)/error_check.o \
	$(OBJDIR)/exchange_cpp2lua.o \
	$(OBJDIR)/exchange_lua2cpp.o \
	$(OBJDIR)/hierarchy.o \
	$(OBJDIR)/lua_calls_cpp_functions.o \
	$(OBJDIR)/max_params.o \
	$(OBJDIR)/metatable_check.o \
	$(OBJDIR)/operators.o \
	$(OBJDIR)/out_params.o \
	$(OBJDIR)/public_variables.o \
	$(OBJDIR)/pull_stub_param.o \
	$(OBJDIR)/push_pull.o \
	$(OBJDIR)/set_ownership.o \
	$(OBJDIR)/string_as_intergal.o \
	$(OBJDIR)/table.o \
	$(OBJDIR)/userdata.o \
	$(OBJDIR)/vector_int.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking test.unit
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning test.unit
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
endif

$(OBJDIR)/main.o: unit_tests/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/expose_hierachy.o: unit_tests/bind_classes/expose_hierachy.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/expose_pulls_stub_param.o: unit_tests/bind_classes/expose_pulls_stub_param.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/lua_class_ops.o: unit_tests/bind_classes/lua_class_ops.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/lua_const_funcs.o: unit_tests/bind_classes/lua_const_funcs.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/lua_ownership.o: unit_tests/bind_classes/lua_ownership.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/lua_push.o: unit_tests/bind_classes/lua_push.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/class_exchange.o: unit_tests/test_classes/class_exchange.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/class_method_returns_class.o: unit_tests/test_classes/class_method_returns_class.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/const_functions.o: unit_tests/test_classes/const_functions.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/construct.o: unit_tests/test_classes/construct.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/destruct.o: unit_tests/test_classes/destruct.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/error_check.o: unit_tests/test_classes/error_check.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/exchange_cpp2lua.o: unit_tests/test_classes/exchange_cpp2lua.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/exchange_lua2cpp.o: unit_tests/test_classes/exchange_lua2cpp.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/hierarchy.o: unit_tests/test_classes/hierarchy.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/lua_calls_cpp_functions.o: unit_tests/test_classes/lua_calls_cpp_functions.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/max_params.o: unit_tests/test_classes/max_params.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/metatable_check.o: unit_tests/test_classes/metatable_check.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/operators.o: unit_tests/test_classes/operators.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/out_params.o: unit_tests/test_classes/out_params.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/public_variables.o: unit_tests/test_classes/public_variables.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/pull_stub_param.o: unit_tests/test_classes/pull_stub_param.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/push_pull.o: unit_tests/test_classes/push_pull.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/set_ownership.o: unit_tests/test_classes/set_ownership.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/string_as_intergal.o: unit_tests/test_classes/string_as_intergal.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/table.o: unit_tests/test_classes/table.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/userdata.o: unit_tests/test_classes/userdata.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/vector_int.o: unit_tests/test_classes/vector_int.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<

-include $(OBJECTS:%.o=%.d)
