#labels Phase-Deploy
Building OOLua version 1.3
<wiki:toc max_depth="4" />

= Introduction =
Most of [Building] is relevant for 1.3, the differences are listed below.

= Scripts =
Build and test scripts have been moved to build_scripts directory and are required to be run from this directory as not as stated in [Building] as being run from the root.


= Visual Studio =
Visual Studio 2010 (vs10) is not supported currently by premake yet if you have vs10 installed and run 
{{{
premake4 vs2010
}}} 
this will generate a vs9 projects then use the update tool to convert to vs10. As vs10 adds files which have not been created directly by premake a specific clean operation has been added to the premake script, this is run via 
{{{
premake4 cleanVS10
}}} 
Scripts to build a local install, build and run unit test etc. have been added for vs10 in the script directory.

= Config =
A configuration header is now included to control what features are present in the library, see [http://code.google.com/p/oolua/source/browse/trunk/include/oolua_config.h oolua_config.h] for more information. To turn a feature on define it to have a default value of 1 in config or predefine it to have this value.

== OOLUA_RUNTIME_CHECKS_ENABLED ==
 default 1
Checks that a type being pulled off the stack is of the correct type.
If this is a proxy type, it also checks the userdata on the stack was created by OOLua

== OOLUA_STD_STRING_IS_INTEGRAL ==
 default 1
If 1 Allows std::string to be a parameter or a return type for a function. 
NOTE: This is always by value

== OOLUA_SAFE_ID_COMPARE ==
 default 1
If 1 then checks id lengths and if the same compares with a memcmp
If 0 compares the address' of the id strings

== OOLUA_USE_EXCEPTIONS ==
 default 0
If 1 Throws exceptions from C++ code. This could be the return of a pcall when pulling an incorrect type of the stack if OOLUA_RUNTIME_CHECKS_ENABLED == 1. See [Building_1_3#Error_Note]

== OOLUA_STORE_LAST_ERROR ==
 default 1
When an error occurs, the error is stored in the Lua registry and is retrievable via OOLUA::get_last_error(lua); See [Building_1_3#Error Note]

== OOLUA_DEBUG_CHECKS ==
 default 1
Checks for null pointers adds a stack trace to messages called within pcall.

== Error_Note ==
It is an error to have both OOLUA_USE_EXCEPTIONS and OOLUA_STORE_LAST_ERROR set to 1